-- Data Cleaning

select *
from layoffs l 

-- 1. Remove Duplicates
-- 2. Standardize the data
-- 3. Null Values or blank values
-- 4. Remove Any Columns


create table layoffs_staging
like layoffs

select *
from layoffs_staging;

insert layoffs_staging
select *
from layoffs 


SELECT *,
row_number() over(
partition by company, industry, total_laid_off, percentage_laid_off, 'date') as row_num
from layoffs_staging ls;

with duplicate_cte as 
(
SELECT *,
row_number() over(
	partition by company, location,
	industry, total_laid_off, percentage_laid_off, 'date', stage,
	country, funds_raised_millions) as row_num
from layoffs_staging ls
)
select *
from duplicate_cte
where row_num > 1;

select *
from layoffs_staging ls 
where company = 'Casper';

with duplicate_cte as 
(
SELECT *,
row_number() over(
	partition by company, location,
	industry, total_laid_off, percentage_laid_off, 'date', stage,
	country, funds_raised_millions) as row_num
from layoffs_staging ls
)
delete 
from duplicate_cte
where row_num > 1;

CREATE TABLE `layoffs_staging2` (
  `company` text,
  `location` text,
  `industry` text,
  `total_laid_off` int DEFAULT NULL,
  `percentage_laid_off` text,
  `date` text,
  `stage` text,
  `country` text,
  `funds_raised_millions` int DEFAULT NULL,
  `row_num` INT
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

select *
from layoffs_staging2
where row_num > 1;

insert into layoffs_staging2
SELECT *,
row_number() over(
	partition by company, location,
	industry, total_laid_off, percentage_laid_off, 'date', stage,
	country, funds_raised_millions) as row_num
from layoffs_staging ls;

delete 
from layoffs_staging2
where row_num > 1;

select * 
from layoffs_staging2;



-- Standardizing data

select company, trim(company)
from layoffs_staging2 ls;

update layoffs_staging2 
set company = trim(company);

select distinct industry 
from layoffs_staging2 ls;

update layoffs_staging2 
set industry = 'Crypto'
where  industry like 'Crypto%';

select country ,trim(country) 
from layoffs_staging2 ls
order by 1;

select distinct  country ,trim(trailing '.' from country) 
from layoffs_staging2 ls 
order by 1;

update layoffs_staging2 ls
set country = trim(trailing '.' from country) 
where country like 'United States%';

select `date`
from layoffs_staging2 ls 

update layoffs_staging2 
set `date` = STR_TO_DATE(`date`, '%m/%d/%Y')

alter table layoffs_staging2 
modify column `date` DATE;

select *
from layoffs_staging2 ls
where total_laid_off is null 
and percentage_laid_off is null ;

update layoffs_staging2 
set industry = null 
where industry = '';

select *
from layoffs_staging2 ls 
where industry is null or industry = '';

select *
from layoffs_staging2 ls 
where company = 'Airbnb'

select ls1.industry, ls2.industry 
from layoffs_staging2 ls1 
join layoffs_staging2 ls2 
	on ls1.company = ls2.company 
	and ls1.location = ls2.location 
where (ls1.industry is null or ls1.industry = '')
and ls2.industry is not null;

update layoffs_staging2 ls1
join layoffs_staging2 ls2 
	on ls1.company = ls2.company 
set ls1.industry = ls2.industry 
	where ls1.industry is null 
	and ls2.industry is not null;

select *
from layoffs_staging2 ls 

select *
from layoffs_staging2 ls
where total_laid_off is null 
and percentage_laid_off is null;

delete 
from layoffs_staging2 ls
where total_laid_off is null 
and percentage_laid_off is null;

select *
from layoffs_staging2 ls;

alter table layoffs_staging2 
drop column row_num;
